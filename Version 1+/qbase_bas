100 REMark QBase 1.02 19/8/2019
105 REMark Last edited 24/1/2020
110 REMark QL dbas front end package program
120 device$="WIN1_"
130 version$="Qbase v1.02"
140 REMark $$asmb=win1_qbsrc_QBase_cnf_cde,0,12
150 REMark $$asmb=win1_qbsrc_qbase102_cde,4,82
160 REMark $$stak=16384
210 IF VER$="HBA" THEN
220 JOB_NAME "Database Editor"
230 END IF
240 IF VER$<>"HBA" THEN
250   cmd$=""
260 END IF
270 DIM choice$(3,26)
280 DIM choice2$(15,15)
290 page_no%=0
300 REMark read page size and scroll size from config block
310 scroll_size%=C_WORD(2)
320 page_size%=C_WORD(1)
350 IF scroll_size% > page_size% THEN
360   scroll_size%=page_size%
370 END IF
390 top_row% = 0
400 :
410 REMark set up main menu
420 :
430 dbname$="":status$=""
440 search_string$=""
450 changed%=1
460 tabb=0
470 :
480 REMark setup secondary menu
490 :
500 :
510 REMark open console window and size it to max size of screen
520 :
530 outline_x = 512: outline_y = 256
540 OPEN#6,'con_' : REMark menu window channel
550 scr_x=450:scr_y=210 : REMark temporarily sey screen size variables manually.
560 OUTL#6,outline_x,outline_y,0,0
570 OPEN #3,'con_' : REMark display application window
580 OPEN #7,'con_' : REMark status bar
590 OPEN #8,'con_'
610 :
620 REMark Draw the menu screen, make all loose items except the file menu button unavailable
630 :
640 MDRAW#6,'qbase8',0,0
650 screen_size=1
660 scr_x=450:scr_y=210 : REMark temporarily set application window size variables manually.
670 FOR button=-2 TO -13 STEP -1: a=MSTAT%(#6,button,-1): NEXT button
680 a=MSTAT%(#6,-17,-1)
690 a=MSTAT%(#6,-18,-1)
710 MWLINK#6,1!#7: PRINT #7,cmd$
720 IF cmd$<>"" THEN
730   er = FDB_OPEN_DATA(#4;cmd$)
740   IF er<>0 THEN
750      MWLINK #6,1!#7:INK#7,0:PAPER#7,221:CLS#7: REPORT#7,er
760   ELSE
770      init_screen:dbname$=cmd$
780      er=FDB_RPOSAB(#4,0):a=MSTAT%(#6,-1,0)
790      MAKE_SCREEN:PRINT_ALL_FIELDS
800   END IF
810 END IF
820 REPeat main_loop
830   action=MCALL(#6;\0)
840   REMark PRINT #0,action, MAWNUM(#6,action,coll%,roww%):PRINT#0, coll%,roww%:PRINT#0, scr_contents$(coll%,roww%)
850   IF action > 65536 THEN EDIT_RECORD
860   SELect ON action
870     =-0: er=FDB_CLOSE_DATA(#4):CLS#3:CLOSE #3:MCLEAR #6:CLOSE #6:CLOSE #7:CLAMP:EXIT main_loop
880     =-1: FILE_MENU:er=FDB_RPOSAB(#4,0):MDRAW#6: a=MSTAT%(#6,-1,0):IF NOT er THEN MAKE_SCREEN: PRINT_ALL_FIELDS:REMark open database
890     =-3: RPOSRE#4;1:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-3,0):                REMark next record
900     =-4: RPOSRE#4;-1:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-4,0):               REMark previous record
910     =-5: RPOSAB#4,0:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-5,0):                REMark go to first record
920     =-6: RPOSAB#4,COUNT(#4):UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-6,0):        REMark go to last record
930     =-7: ADD_REC:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-7,0):                   REMark add record
940     =-8: DELETE_RECORD:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-8,0):             REMark delete record
960     =-12:curr_rec=RECNUM(#4):FIND_STRING:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-12,0): REMark find record
970     =-13: curr_rec=RECNUM(#4):FIND_AGAIN:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-13,0): REMark find again
980     =-17: ORDER_DATA_BASE:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS: a=MSTAT%(#6,-17,0):                REMark SORT
990     =-18: INCLUDE_FIELDS:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-18,0):              REMark INCLUDE
1000     =-2: tabb=1:temprecnum=RECNUM(#4):tabular:RPOSAB#4,temprecnum:tabb=0:UPDATE_STATUS:MAKE_SCREEN:PRINT_ALL_FIELDS
1010     =-9: NEW_FIELD:UPDATE_STATUS:RECALCULATE_POSITIONS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-9,0):     REMark add field
1020     =-10: DELETE_FIELD:UPDATE_STATUS:RECALCULATE_POSITIONS:MAKE_SCREEN:PRINT_ALL_FIELDS:a=MSTAT%(#6,-10,0):REMark delete field
1030     =-11: RENAME_FIELD:UPDATE_STATUS:RECALCULATE_POSITIONS:MAKE_SCREEN:PRINT_ALL_FIELDS: a=MSTAT%(#6,-11,0):REMark rename field
1040     =-19: RESIZE_WINDOW 6, 3, xsize%, ysize%: scr_x = xsize%: scr_y=ysize%: IF dbname$<>"" THEN :UPDATE_STATUS: MAKE_SCREEN: PRINT_ALL_FIELDS: END IF : a=MSTAT%(#6,-19,0)
1070     =REMAINDER :
1080   END SELect
1090 END REPeat main_loop
1100 STOP
1110 :
1120 DEFine PROCedure FILE_MENU
1130   MDRAW#8,'file'
1140   REPeat act_loop
1150     action=MCALL(#8;\0)
1160     SELect ON action
1170       =-1: OPEN_DB:EXIT act_loop
1180       =-2: CREATE_DB:a=MSTAT%(#8,-2,0)
1190       =-3: ABOUT_MENU:a=MSTAT%(#8,-3,0)
1200       =-5: EXPORT_FILE:a=MSTAT%(#8,-5,0): EXIT act_loop
1210       =-6: IMPORT_FILE: a=MSTAT%(#8,-6,0):EXIT act_loop
1220       =0: MCLEAR#8:RETurn
1230     END SELect
1240   END REPeat act_loop
1250 MCLEAR #8
1260 END DEFine FILE_MENU
1270 :
1280 DEFine PROCedure IMPORT_FILE
1300    ifile$=FILE_SELECT$("Import file name","",-1,_exp)
1310    dbname$=FILE_SELECT$("New Database","",-1,_dbs)
1320    er=FDB_IMPORT(ifile$ TO #10;dbname$)
1330   IF er <> 0 THEN
1340     REPORT_ERROR(er)
1350   ELSE
1400     CLOSE_DATA #10
1410   END IF
1420 END DEFine IMPORT_FILE
1430 :
1440 DEFine PROCedure EXPORT_FILE
1450    efile$=FILE_SELECT$("Export file name","",-1,_exp)
1460    REPeat until_correct
1470    er=FDB_EXPORT(#4 TO efile$)
1480    IF er=0 THEN EXIT until_correct
1490    a=FILE_ERROR(er)
1500    IF a=0 THEN m=MSTAT%(#8,-5,0): RETurn
1510  END REPeat until_correct
1520 END DEFine EXPORT_FILE
1530 :
1540 DEFine PROCedure ABOUT_MENU
1550   OPEN#9,'con_'
1560     MDRAW#9,'about'
1570     REPeat about_loop
1580       action=MCALL(#9,\0)
1590       IF action=0 THEN MCLEAR#9:RETurn
1600     END REPeat about_loop
1610 END DEFine ABOUT_MENU
1620 :
1630 DEFine PROCedure OPEN_DB
1650   dbname$=""
1660   REPeat until_correct
1670   dbname$=FILE_SELECT$("Open Database","",-1,_dbs)
1680   REMark test for file errors
1690   IF dbname$="" THEN RETurn
1700   er=FDB_OPEN_DATA(#4;dbname$)
1710   IF er=0 THEN EXIT until_correct
1720   IF er=-7 THEN
1730      a=FILE_ERROR(-7)
1740      IF a=0 THEN
1750         CLOSE#4:MCLEAR#6:CLOSE#6:CLOSE #7:CLAMP:STOP
1760      END IF
1770   END IF
1780   REPORT_ERROR(er)
1790   dbname$=""
1800   END REPeat until_correct
1810 init_screen
1820 END DEFine  OPEN_DB
1830 :
1840 DEFine PROCedure init_screen
1850   REMark get field names, types, lengths  etc and put them in an array
1860   :
1870   UPDATE_STATUS
1880   no_fields=FLNUM(#4)
1890   DIM f_type(no_fields-1):DIM f_len(no_fields-1):DIM f_name$(no_fields-1,20)
1900   DIM flxpos(no_fields-1),flypos(no_fields-1)
1910   FOR i=0 TO no_fields-1
1920     f_name$(i)=FLNAME(#4;i+1):f_type(i)=FLTYP(#4;i+1):f_len(i)=FLLEN(#4;i+1)
1930   END FOR i
1940   :
1950   REMark calculate screen positions; simple as of now
1960   :
1970   p=2
1980   FOR i=0 TO no_fields-1
1990     flxpos(i)=p
2000     flypos(i)=2
2010   IF FLNUM(#4)>INT(scr_y/10/2-2) THEN p=p+1: incr=1:ELSE p=p+2 :incr=2:END IF
2020   no_lines=f_len(i)/((scr_x/6)-2)
2030   IF incr<INT(no_lines) THEN p=p+INT(no_lines-l)
2040 END FOR i
2050 FOR i=-1 TO -13 STEP -1: a=MSTAT%(#6, i, 0): NEXT i
2060 a=MSTAT%(#6, -17, 0)
2070 a=MSTAT%(#6, -18, 0)
2080 END DEFine init_screen
2090 :
2130 DEFine PROCedure RECALCULATE_POSITIONS
2140   no_fields=FLNUM(#4)
2150   DIM f_type(no_fields-1):DIM f_len(no_fields-1):DIM f_name$(no_fields-1,20)
2160   DIM flxpos(no_fields-1),flypos(no_fields-1)
2170   FOR i=0 TO no_fields-1
2180     f_name$(i)=FLNAME(#4;i+1):f_type(i)=FLTYP(#4;i+1):f_len(i)=FLLEN(#4;i+1)
2190   END FOR i
2200   :
2210   REMark calculate screen positions; simple as of now
2220   :
2230   p=2
2240   FOR i=0 TO no_fields-1
2250     flxpos(i)=p
2260     flypos(i)=2
2270   IF FLNUM(#4)>INT(scr_y/10/2-2) THEN p=p+1: incr=1:ELSE p=p+2 :incr=2:END IF
2280   no_lines=f_len(i)/((scr_x/6)-2)
2290   IF incr<INT(no_lines) THEN p=p+INT(no_lines-l)
2300 END FOR i
2310 END DEFine RECALCULATE_POSITIONS
2320 :
2330 DEFine PROCedure MAKE_SCREEN
2340   LOCal xpos,ypos
2350   DIM scr_contents$(1,no_fields-1,50)
2360   DIM x_width%(1)
2370   :
2380   REMark make sure screen title is always centered
2390   :
2400   tit$=" "&version$&" : "&dbname$&status$
2410   MWLINK#6,1!#7
2420   INK#7,0:PAPER#7,221
2430   PRINT #7,tit$
2440   MWLINK #6,1,#3
2450   CLS#3
2460   INK #3,7
2470   x_width%(0)=scr_x/4
2480   x_width%(1)=x_width%(0)*3-15
2490   FOR i=0 TO no_fields-1
2500     scr_contents$(0,i)=f_name$(i)
2510     scr_contents$(1,i)=FETCH(#4,i+1)
2520   END FOR i
2530 END DEFine MAKE_SCREEN
2540 :
2550 DEFine PROCedure PRINT_ALL_FIELDS
2560   LOCal i
2570   MAWDRAW #6,1,scr_contents$,0,0,,x_width%
2580   FOR i=1 TO FLNUM(#4)*2 STEP 2
2590     stat%=MSTAT%(#6,i*65536+1,-1)
2600     REMark PRINT #0,i;
2610   END FOR i
2620 END DEFine PRINT_ALL_FIELDS
2630 :
2640 DEFine PROCedure PRINT_FIELD(x,y,field_name$)
2650   AT#3,x,y
2660   PRINT #3,field_name$
2670 END DEFine PRINT_FIELD
2680 :
2690 DEFine PROCedure EDIT_RECORD
2700   LOCal num,f,f%,col%,row%,edittext$,text$,i,f$,result%(15)
2710   PVAL#6,result%
2720   MWINDOW#6,action
2730   text$=MTEXT$(#6,action)
2740      IF result%(5)=1 THEN HOT_STUFF text$: a=MSTAT%(#6,action,0):RETurn : REMark stuff stuffer buffer on left mouse click
2750   MINPUT#6,text$
2760   key%=MKEY%(#6)
2770   num=MAWNUM(#6,action,col%,row%)
2780   IF key%=10 THEN
2790     i=row%+1
2800     f$=text$
2810     typ=f_type(row%)
2820     SELect ON typ
2830       =0:er=FDB_SET(#4;i;f$):
2840       =1:IF NUMBER(f$) AND BOUNDS(f$) THEN f%=f$:er=FDB_SET(#4;i;f%)
2850       =2:IF NUMBER(f$) THEN f=f$:er=FDB_SET(#4;i;f)
2860       =3:IF NUMBER(f$) THEN f=f$:er=FDB_SET(#4;i;f)
2870     END SELect
2880     IF NOT NUMBER(f$) AND typ<>0 THEN REPORT_ERROR -17: MAKE_SCREEN: PRINT_ALL_FIELDS: RETurn
2890     IF NOT BOUNDS(f$) AND typ=1 THEN REPORT_ERROR -18: MAKE_SCREEN: PRINT_ALL_FIELDS: RETurn
2900     IF er=-5 THEN REPORT_ERROR -5:MAKE_SCREEN:PRINT_ALL_FIELDS: RETurn
2910     IF er=-17 THEN REPORT_ERROR -17:MAKE_SCREEN:PRINT_ALL_FIELDS: RETurn
2920     er = FDB_UPDATE(#4)
2930     IF er<>0 THEN
2940        REPORT_ERROR(er)
2950     END IF
2960     MAKE_SCREEN:PRINT_ALL_FIELDS
2970   END IF
2980 END DEFine EDIT_RECORD
2990 :
3000 DEFine PROCedure ADD_REC
3010   LOCal f$,typ,i,c
3020   c=COUNT(#4)+1:status$=" : Record "&c&" of "&c:MAKE_SCREEN
3030   FOR i=0 TO no_fields-1
3040     typ=f_type(i)
3050     SELect ON typ
3060       =0:SET#4;i+1;""
3070       =1:SET#4;i+1;0
3080       =2:SET#4;i+1;0
3090       =3:SET#4;i+1;0
3100     END SELect
3110   END FOR i
3120   er = FDB_APPEND(#4)
3130   IF er<>0 THEN
3140      REPORT_ERROR(er)
3150      RETurn
3160   END IF
3170   RPOSAB#4,COUNT(#4)
3180 END DEFine ADD_REC
3190 :
3200 DEFine PROCedure WHOLE_SCREEN
3210   MAKE_SCREEN
3220   PRINT_ALL_FIELDS
3230 END DEFine WHOLE_SCREEN
3240 :
3250 DEFine PROCedure NEW_FIELD
3260   LOCal field_choice,type,name$,length,length$
3270   name$=""
3280   length$=""
3290   length=-20: REMark default length
3300   type = 0: REMark default type
3310   field_choice=FLNUM(#4)+1: REMark default to append
3320   MDRAW#8,'addfield'
3330   MAWDRAW#8,1,f_name$,0,0,,105
3340   REPeat action_loop
3350     action=MCALL(#8; \0)
3360     IF action > 65536 THEN
3370       a=MSTAT%(#8,-9,0)
3380       tempaction=action
3390       FOR i=1 TO FLNUM(#4)
3400         a=MSTAT%(#8,i*65536+1,0)
3410       END FOR i
3420       a=MSTAT%(#8,tempaction,1)
3430       field_choice=MAWNUM(#8,action)
3440     END IF
3450     SELect ON action
3460       =0: MCLEAR#8:RETurn
3470       =-1:a=MSTAT%(#8,-2,0):a=MSTAT%(#8,-3,0):a=MSTAT%(#8,-4,0):type=0
3480       =-2:a=MSTAT%(#8,-1,0):a=MSTAT%(#8,-3,0):a=MSTAT%(#8,-4,0):type=1
3490       =-3:a=MSTAT%(#8,-1,0):a=MSTAT%(#8,-2,0):a=MSTAT%(#8,-4,0):type=2
3500       =-4:a=MSTAT%(#8,-1,0):a=MSTAT%(#8,-2,0):a=MSTAT%(#8,-3,0):type=3
3510       =-10:MWINDOW#8,-10:PAPER #8,7:MINPUT#8,length$:length=length$
3520       =-8:MWINDOW#8,-8:PAPER #8,7:MINPUT#8,name$
3530       =-5: MCLEAR #8: EXIT action_loop
3540     =-9: field_choice=FLNUM(#4)+1:FOR i=1 TO FLNUM(#4):a=MSTAT%(#8,i*65536+1,0):END FOR i
3550   END SELect
3560 END REPeat action_loop
3570 IF name$="" THEN RETurn
3580 IF type = 0 AND name$(LEN(name$))<>"$" THEN
3590   name$=name$&"$"
3600 END IF
3610 message$ = "Add a field called "&name$&" of type "&type&"?"
3620 final_choice=ITEM_SELECT("Confirm",message$,"Yes","No")
3630 IF final_choice<>1 THEN RETurn
3640 IF final_choice=1 AND type=0 THEN
3650   er = FDB_ADD_FIELD(#4;field_choice,type,length)
3660   REMark PRINT#0, er
3670   IF er<>0 THEN
3680      REPORT_ERROR(er)
3690      RETurn
3700   END IF
3710 END IF
3720 IF final_choice=1 AND type <> 0 THEN
3730   er = FDB_ADD_FIELD(#4;field_choice,type,0)
3740   REMark PRINT #0, er
3750   IF er<>0 THEN
3760     REPORT_ERROR(er)
3770     RETurn
3780   END IF
3790 END IF
3800 er = FDB_STNAME(#4;field_choice,name$)
3810 IF er <> 0 THEN
3820    REPORT_ERROR(er)
3830    RETurn
3840 END IF
3850 er = FDB_SAVE_NAMES(#4)
3860 IF  er <> 0 THEN
3870    REPORT_ERROR(er)
3880    RETurn
3890 END IF
3900 END DEFine NEW_FIELD
3910 :
3920 DEFine PROCedure DELETE_FIELD
3930   LOCal field_choice,a,tempaction,final_choice
3940   IF FLNUM(#4)=1 THEN a=ITEM_SELECT ("Warning","You can't delete the last field in a file","OK"):RETurn
3950   MDRAW#8,'delfield'
3960   MAWDRAW#8,1,f_name$,0,0,,105
3970   REPeat action_loop
3980     action=MCALL(#8; \0)
3990     IF action > 65536 THEN
4000       tempaction=action
4010       FOR i=1 TO FLNUM(#4)
4020         a=MSTAT%(#8,i*65536+1,0)
4030       END FOR i
4040       a=MSTAT%(#8,tempaction,1)
4050       field_choice=MAWNUM(#8,action)
4060     END IF
4070     IF field_choice=0 THEN MCLEAR#8:RETurn
4080     SELect ON action
4090       =0: MCLEAR#8:RETurn
4100       =-1: MCLEAR #8: EXIT action_loop
4110     END SELect
4120   END REPeat action_loop
4130   final_choice=ITEM_SELECT("Confirm","Are you sure you want to delete the field "&f_name$(field_choice-1),"Yes","No")
4140   IF final_choice<>1 THEN RETurn
4150   er = FDB_REMOVE_FIELD (#4,field_choice)
4160   IF er<>0 THEN
4170     REPORT_ERROR(er)
4180     RETurn
4190   END IF
4200 END DEFine DELETE_FIELD
4210 :
4220 DEFine PROCedure RENAME_FIELD
4230   LOCal field_choice, new_name$
4240   new_name$=""
4250   MDRAW#8,'renfield'
4260   MAWDRAW#8,1,f_name$,0,0,,105
4270   REPeat action_loop
4280     action=MCALL(#8; \0)
4290     IF action > 65536 THEN
4300       tempaction=action
4310       FOR i=1 TO FLNUM(#4)
4320         a=MSTAT%(#8,i*65536+1,0)
4330       END FOR i
4340       a=MSTAT%(#8,tempaction,1)
4350       field_choice=MAWNUM(#8,action)
4360     END IF
4370     SELect ON action
4380       =0:  MCLEAR#8:RETurn
4390       =-1: MCLEAR #8: EXIT action_loop
4400       =-4: MWINDOW#8,-4:PAPER#8,7:MINPUT#8,new_name$
4410     END SELect
4420   END REPeat action_loop
4430   IF FLTYP(#4,field_choice)=0 AND new_name$(LEN(new_name$))<>"$" THEN
4440     new_name$=new_name$&"$"
4450   END IF
4460   IF new_name$="" THEN RETurn
4470   final_choice=ITEM_SELECT("Confirm","Are you sure you want to rename the field "&f_name$(field_choice-1)&" to "&new_name$,"Yes","No")
4480   IF final_choice<>1 THEN RETurn
4490   er = FDB_STNAME(#4;field_choice,new_name$)
4500   IF er <> 0 THEN
4510     REPORT_ERROR(er)
4520     RETurn
4530   END IF
4540   er = FDB_SAVE_NAMES(#4)
4550   IF er<>0 THEN
4560     REPORT_ERROR(er)
4570     RETurn
4580   END IF
4590 END DEFine RENAME_FIELD
4600 :
4610 DEFine PROCedure CREATE_DB
4620     er=FDB_CLOSE_DATA(#4)
4630     dbname$=FILE_SELECT$("New Database",DATAD$&"new_data_base_dbs",-1,_dbs)
4640     REPeat until_correct
4650       er=FDB_CREATE(#4;dbname$; 0,-20; 0,-20)
4660       IF er=0 THEN EXIT until_correct
4670       IF er=-8 THEN REPORT_ERROR -8: RETurn
4680       IF er=-7 THEN REPORT_ERROR -7: RETurn
4690     END REPeat until_correct
4700     SEXTRA #4;'"field1$","field2$"'&CHR$(13)&CHR$(10)
4710     APPEND#4
4720     CLOSE_DATA#4
4730 END DEFine CREATE_DB
4740 :
4750 DEFine PROCedure CHANGE_DATA_DIR
4760   ddir$=DIR_SELECT$("Select new data directory",,,,,,"win3_dbas_")
4770   DATA_USE ddir$
4780 END DEFine CHANGE_DATA_DIR
4790 :
4800 DEFine PROCedure UPDATE_STATUS
4810   r=RECNUM(#4)+1
4820   c=COUNT(#4)
4830   status$=" : Record "&r&" of "&c&"                "
4840 END DEFine UPDATE_STATUS
4850 :
4860 DEFine FuNction PIX_CENT(wid,STRNG$)
4870   LOCal w$
4880   w$=wid/2-((LEN(STRNG$)*6)/2)
4890   RETurn w$
4900 END DEFine PIX_CENT
4910 :
4920 DEFine PROCedure FIND_STRING
4930   search_string$=READ_STRING$("Input a string",,"String to find:")
4940   FIND#4;search_string$
4950   IF FOUND(#4)=0
4960     a=ITEM_SELECT("Error",search_string$&" not found",CHR$(27))
4970     RPOSAB#4;curr_rec
4980   END IF
4990 END DEFine FIND_STRING
5000 :
5010 DEFine PROCedure FIND_AGAIN
5020   IF search_string$="" THEN RETurn
5030   FINDC#4;search_string$
5040   IF FOUND(#4)=0
5050     a=ITEM_SELECT("Error",search_string$&" not found",CHR$(27))
5060     RPOSAB#4;curr_rec
5070   END IF
5080 END DEFine FIND_AGAIN
5090 :
5100 DEFine PROCedure ORDER_DATA_BASE
5110   LOCal action,title$,lin,column,direction,direc$,field
5120   REMark set defaults
5130   direction=1:field_choice=1
5140   MDRAW#8,'sort'
5150   MAWDRAW#8,1,f_name$,0,0,,105
5160   REPeat action_loop
5170     action=MCALL(#8;\0)
5180     IF action > 65536 THEN
5190       tempaction=action
5200       FOR i=1 TO FLNUM(#4)
5210         a=MSTAT%(#8,i*65536+1,0)
5220       END FOR i
5230       a=MSTAT%(#8,tempaction,1)
5240       field_choice=MAWNUM(#8,action)
5250     END IF
5260     SELect ON action
5270       =0: MCLEAR#8: RETurn
5280       =-1:a=MSTAT%(#8,-5,0):direction=1
5290       =-5:a=MSTAT%(#8,-1,0):direction=-1
5300       =-2:MCLEAR#8:EXIT action_loop
5310     END SELect
5320   END REPeat action_loop
5330   ORDER#4;field_choice,direction
5340 END DEFine ORDER_DATA_BASE
5350 :
5360 DEFine PROCedure INCLUDE_FIELDS
5370   LOCal criterion$
5380   REMark set defaults
5390   criterion$="":includ=1:operator$="=":field_choice=1
5400   MDRAW#8,'select'
5410   MAWDRAW#8,1,f_name$,0,0,,105
5420   REPeat action_loop
5430     action=MCALL(#8; \0)
5440     IF action > 65536 THEN
5450       tempaction=action
5460       FOR i=1 TO FLNUM(#4)
5470         a=MSTAT%(#8,i*65536+1,0)
5480       END FOR i
5490       a=MSTAT%(#8,tempaction,1)
5500       field_choice=MAWNUM(#8,action)
5510     END IF
5520     SELect ON action
5530       =0: MCLEAR#8: RETurn
5540       =-9:a=MSTAT%(#8,-8,0):includ=0
5550       =-8:a=MSTAT%(#8,-9,0):includ=1
5560       =-1:a=MSTAT%(#8,-2,0):a=MSTAT%(#8,-3,0):a=MSTAT%(#8,-4,0):operator$="="
5570       =-2:a=MSTAT%(#8,-1,0):a=MSTAT%(#8,-3,0):a=MSTAT%(#8,-4,0):operator$="<>"
5580       =-3:a=MSTAT%(#8,-1,0):a=MSTAT%(#8,-2,0):a=MSTAT%(#8,-4,0):operator$="<"
5590       =-4:a=MSTAT%(#8,-1,0):a=MSTAT%(#8,-2,0):a=MSTAT%(#8,-3,0):operator$=">"
5600       =-10:MWINDOW#8,-10:PAPER#8,7:MINPUT#8,criterion$
5610       =-5: MCLEAR #8: EXIT action_loop
5620       =-11: MCLEAR #8: INCLUDE #4: RETurn
5630     END SELect
5640   END REPeat action_loop
5650   IF includ=1 THEN INCLUDE#4;field_choice,operator$,criterion$
5660   IF includ=0 THEN EXCLUDE#4;field_choice,operator$,criterion$
5670   IF COUNT(#4)=0 THEN a=ITEM_SELECT("ERROR","All fields have been excluded","Include all"):INCLUDE #4
5680 END DEFine INCLUDE_FIELDS
5690 :
5700 DEFine PROCedure DELETE_RECORD
5710   LOCal choice
5720   IF COUNT(#4)=1 THEN a=ITEM_SELECT("Warning","You can't delete the last record in a file","OK"):RETurn
5730   choice=ITEM_SELECT('Delete?',"Are you sure you want to delete this record?",yes,no)
5740   IF choice=1 THEN
5750     er = FDB_REMOVE(#4)
5760     IF er <>0 THEN
5770       REPORT_ERROR(er)
5780       RETurn
5790     END IF
5800   END IF
5810 END DEFine DELETE_RECORD
5820 :
5830 :
5840 :
5850 DEFine PROCedure tabular: REMark new version of tabular edit with PE
5860 LOCal f,r,No_of_fields,no_of_records
5870 temp%=temprecnum
5880 top_row%=temprecnum
5890 UPDATE_TABLE 0,top_row%
5900 REPeat loop_action
5910   act=MCALL(#6; \0)
5920   IF act>65536 THEN EDIT_TAB
5930   SELect ON act
5940     =0: CLOSE #6:CLOSE #7: er=FDB_CLOSE_DATA(#4):CLAMP:STOP
5950     =-2: MAWCLEAR#6,1: FOR i=-1 TO -13 STEP -1: a=MSTAT%(#6,i,0):NEXT i:RETurn
5960     =-3: a = MSTAT%(#6,-3,0): newy% = top_row%+scroll_size%: IF newy%<COUNT(#4) THEN :top_row%=newy%: UPDATE_TABLE 0,newy% : END IF : REMark Pgdown
5970     =-4: a=MSTAT%(#6,-4,0): IF top_row%<scroll_size% THEN : newy%=0: ELSE : newy%=top_row%-scroll_size%:END IF :IF newy%>=0 THEN :top_row%=newy%: UPDATE_TABLE 0,newy% : END IF :REMark page up
5980     =-17: ORDER_DATA_BASE:a=MSTAT%(#6,-17,0): changed%=1: UPDATE_TABLE 0,0
5990     =-18: INCLUDE_FIELDS:a=MSTAT%(#6,-18,0):changed%=1:UPDATE_TABLE 0,0
6000     =-19: RESIZE_WINDOW 6, 3, xsize%, ysize%:scr_x = xsize%:scr_y=ysize%:a=MSTAT%(#6,-19,0): UPDATE_TABLE 0,top_row%
6010   END SELect
6020 MWLINK #6,1!#7:CLS#7
6030 END REPeat loop_action
6040 END DEFine
6050 :
6060 DEFine PROCedure EDIT_TAB
6070    LOCal x%,y%,xpos%,ypos%,field$,result%(15)
6080    a=MAWNUM(#6,act,x%,y%): REMark PRINT #0,x%,y%: REMark selected coordinates are in x% and y%
6090    a=MAWNUM(#6\1,xpos%,ypos%): REMark top left coordinates
6110    IF y%=0 THEN a=MSTAT%(#6,act,0):RETurn : REMark don't edit field names!
6120    RPOSAB#4,y%-1+top_row%: field$=FETCH(#4;x%+1): REMark PRINT#0,field$
6130    PVAL #6, result%
6140    IF result%(5)=1 THEN HOT_STUFF field$: temprecnum=y%-1:a=MSTAT%(#6,act,0): RETurn
6150    MWINDOW #6,1!
6160    INK #6,0
6170    PAPER#6,7
6180    MINPUT#6,field$
6190     f$=field$
6200     typ=f_type(x%)
6210     SELect ON typ
6220       =0:er=FDB_SET(#4;x%+1;f$):
6230       =1:IF NUMBER(f$) AND BOUNDS (f$) THEN f%=f$:er=FDB_SET(#4;x%+1;f%)
6240       =2:IF NUMBER(f$) THEN f=f$:er=FDB_SET(#4;x%+1;f)
6250       =3:IF NUMBER(f$) THEN f=f$:er=FDB_SET(#4;x%+1;f)
6260     END SELect
6270     IF NOT NUMBER(f$) AND typ<>0 THEN REPORT_ERROR -17: changed%=0: UPDATE_TABLE xpos%,ypos%: RETurn
6280     IF type=1 AND NOT BOUNDS(f$) THEN REPORT_ERROR -18: changed%=0:UPDATE_TABLE xpos%,ypos%: RETurn
6290     IF er=-5 THEN REPORT_ERROR -5:changed%=0: UPDATE_TABLE xpos%,ypos%: RETurn
6300     IF er=-17 THEN REPORT_ERROR -17:changed%=0: UPDATE_TABLE xpos%,ypos%:PRINT_ALL_FIELDS: RETurn
6310     temprecnum=y%-1
6320     UPDATE#4
6330     changed%=1:UPDATE_TABLE xpos%,ypos%+top_row%
6340 END DEFine EDIT_TAB
6350 :
6360 DEFine PROCedure UPDATE_TABLE(x%,y%)
6370   LOCal result%(15),maxlen%,array_records%
6380   REMark PRINT#0, y%
6390   MWLINK #6,1!#7:CLS#7
6400   maxlen%=20
6410   No_of_fields%=FLNUM(#4):no_of_records%=COUNT(#4)
6420   IF no_of_records%-y% < page_size% THEN
6430      array_records%=no_of_records%-y%
6440   ELSE
6450      array_records%=page_size%
6460   END IF
6470   REMark PRINT #0,array_records%
6480   IF changed%=1 THEN DIM array$(No_of_fields%-1,array_records%,maxlen%)
6490   MWLINK#6,1,#3:REMark MDRAW#6
6500   REMark disable buttons
6510   a=MSTAT%(#6,-1,-1):a=MSTAT%(#6,-2,1):FOR i=-5 TO -13 STEP -1: a=MSTAT%(#6,i,-1):END FOR i
6520   IF changed%=1 THEN
6530   RPOSAB#4,0
6540   FOR i=1 TO No_of_fields%
6550     array$(i-1,0)=FLNAME(#4,i)
6560   END FOR i
6570   record_counter%=1
6580   FOR r=y% TO y% + page_size%-1
6590     IF r < COUNT(#4) AND r>=0 THEN
6600       RPOSAB#4,r
6610       FOR f=1 TO No_of_fields%
6620         v$=FETCH(#4,f)
6630         REMark PRINT #0,page_no%,page_size%,record_counter%
6640         array$(f-1,record_counter%)=v$
6650       END FOR f
6660     END IF
6670   record_counter%=record_counter%+1
6680   END FOR r
6690   END IF
6700   :
6710   REMark work around ugly bug in Easyptr
6720 :
6790   MAWDRAW#6,1,array$,x%,0
6800 END DEFine UPDATE_TABLE
6810 :
6820 DEFine FuNction NUMBER(a$)
6830 REMark returns 0 if not numeric, 1 if numeric
6840   LOCal i
6850   IF a$="" THEN
6860     RETurn 0
6870   END IF
6880   nums$="-0123456789."
6890   FOR i=1 TO LEN(a$)
6900      IF NOT (a$(i) INSTR nums$)
6910              RETurn 0
6920      END IF
6930 END FOR i
6940 RETurn 1
6950 END DEFine num
6960 :
6970 DEFine FuNction BOUNDS(a$)
6980  LOCal a
6990  IF NOT NUMBER(a$) THEN RETurn -1
7000  IF a$="" THEN RETurn -1
7010  a=a$
7020  IF a<=32767 AND a > -32768 THEN RETurn 1: ELSE RETurn 0
7030 END DEFine BOUNDS
7040 :
7050 DEFine PROCedure GET_APPW_SIZE(channel,appw_no,xsize%,ysize%)
7060 LOCal working_def,ww_nappl,ww_pappl,apw
7070 working_def=MWDEF(#channel)
7080 ww_nappl=PEEK_W(working_def+110)
7090 IF appw_no<1 OR appw_no>ww_nappl THEN
7100 xsize%=-1 : ysize%=-1
7110 ELSE
7120 ww_pappl=PEEK_L(working_def+112)
7130 apw=PEEK_L(ww_pappl+((appw_no-1)*4))
7140 xsize%=PEEK_W(apw)
7150 ysize%=PEEK_W(apw+2)
7160 END IF
7170 END DEFine GET_APPW_SIZE
7180 :
7190 DEFine PROCedure RESIZE_WINDOW(channo, screen_channel, xsize%, ysize%)
7200    DIM pr%(16)
7210    PVAL#channo; pr%
7230    WSIZE #channo, x%, y%
7250    xs% = pr%(8) - x%
7260    ys% = pr%(9) - y%
7270    MCLEAR#channo
7280    MDRAW#channo; "qbase8", -1, -1, xs%, ys%
7290    GET_APPW_SIZE channo,1,xsize%,ysize%
7300    MWLINK#channo,1,#screen_channel
7320 END DEFine RESIZE_WINDOW
